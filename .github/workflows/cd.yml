name: CD to ECS (fcg-payments)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-2
      AWS_ACCOUNT_ID: 536765581095
      ECR_REPO: fcg-payments
      CLUSTER_NAME: fcg-cluster
      SERVICE_NAME: fcg-payments-svc
      TASKDEF_FAMILY: fcg-payments-task
      CONTAINER_NAME: app
      IMAGE_TAG: ${{ github.sha }}
      CLUSTER_ARN: arn:aws:ecs:us-east-2:536765581095:cluster/fcg-cluster
      SERVICE_ARN: arn:aws:ecs:us-east-2:536765581095:service/fcg-cluster/fcg-payments-svc

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag and push image
        run: |
          IMAGE=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO
          docker build -t $IMAGE:latest -t $IMAGE:$IMAGE_TAG .
          docker push $IMAGE:latest
          docker push $IMAGE:$IMAGE_TAG

      - name: Render task definition
        id: taskdef
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .aws/ecs-taskdef.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.taskdef.outputs.task-definition }}
          service: ${{ env.SERVICE_NAME }}
          cluster: ${{ env.CLUSTER_NAME }}
          wait-for-service-stability: true
